MERGE INTO SEASON
    USING (
        SELECT DISTINCT SEASON 
        FROM DATA_TABLE
    ) TMP
    ON (SEASON.NAME = TMP.SEASON)
WHEN NOT MATCHED THEN
    INSERT (NAME) VALUES (TMP.SEASON);
    
MERGE INTO CIRCUIT 
    USING (
        SELECT DISTINCT CIRCUIT 
        FROM DATA_TABLE
    ) TMP
    ON (TMP.CIRCUIT = CIRCUIT.NAME)
WHEN NOT MATCHED THEN
    INSERT (NAME) VALUES (TMP.CIRCUIT);
        
MERGE INTO CONSTRUCTOR
    USING (
        SELECT DISTINCT
        CONSTRUCTOR,
        CONSTRUCTOR_WINS WINS
        FROM DATA_TABLE
    ) TMP
    ON (TMP.CONSTRUCTOR = CONSTRUCTOR.NAME AND CONSTRUCTOR.WINS = TMP.WINS)
WHEN NOT MATCHED THEN
    INSERT (NAME, WINS) VALUES (TMP.CONSTRUCTOR, TMP.WINS);

MERGE INTO DRIVER
    USING (
        SELECT DISTINCT
        DRIVER,
        DRIVER_WINS
        FROM DATA_TABLE DT
    ) TMP
    ON (TMP.DRIVER_WINS = DRIVER.WINS AND TMP.DRIVER = DRIVER.NAME)
WHEN NOT MATCHED THEN
    INSERT (NAME, WINS) VALUES (TMP.DRIVER, TMP.DRIVER_WINS);

MERGE INTO EVENT 
    USING (
        SELECT distinct
            DT.EVENT EV, 
            DT."Date" DATETIME,
            CIRCUIT.ID CIRC_ID,
            DT.LAPS LAPS,
            DR.ID POLE,
            SEASON.ID SES_ID,
            WIN.ID WIN_ID
        FROM DATA_TABLE DT
        LEFT JOIN CIRCUIT 
        ON CIRCUIT.NAME = DT.CIRCUIT
        LEFT JOIN DRIVER DR
        ON DR.NAME = DT.POLE_POSITION
        LEFT JOIN SEASON
        ON SEASON.NAME = DT.SEASON
        LEFT JOIN DRIVER WIN
        ON WIN.NAME = DT.WINNER
    ) TMP
    ON (
    TMP.EV = EVENT.NAME AND 
    TMP.DATETIME = EVENT.DATETIME AND 
    TMP.CIRC_ID = EVENT.CIRCUIT_ID AND 
    EVENT.POLE_POSITION_ID = TMP.POLE AND 
    EVENT.SEASON_ID = TMP.SES_ID AND
    EVENT.WINNER_ID = TMP.WIN_ID
    )
WHEN NOT MATCHED THEN
    INSERT (
    NAME, 
    DATETIME, 
    CIRCUIT_ID, 
    LAPS, 
    POLE_POSITION_ID, 
    SEASON_ID,
    WINNER_ID) VALUES (
    TMP.EV, 
    TMP.DATETIME, 
    TMP.CIRC_ID, 
    TMP.LAPS, 
    POLE, 
    TMP.SES_ID,
    TMP.WIN_ID
    );

MERGE INTO SEASON_EVENT
    USING (
        SELECT DISTINCT
        SEASON.ID SES_ID,
        EVENT.ID EV_ID
        FROM DATA_TABLE DT
        RIGHT JOIN SEASON
        ON SEASON.NAME = DT.SEASON
        RIGHT JOIN EVENT
        ON DT.EVENT = EVENT.NAME AND EVENT.DATETIME = DT."Date"
    ) TMP
    ON (
    SEASON_EVENT.SEASON_ID = TMP.SES_ID AND
    SEASON_EVENT.EVENT_ID = TMP.EV_ID
    )
WHEN NOT MATCHED THEN
    INSERT (
    SEASON_ID,
    EVENT_ID ) VALUES (
    TMP.SES_ID,
    TMP.EV_ID
    );

MERGE INTO EVENT_DRIVER 
    USING (
        SELECT DISTINCT 
        DT.POINTS POINTS,
        CONSTRUCTOR.ID CON_ID,
        DT.START_DRIVER_PLACE START_POSITION,
        DT.TIME TIME,
        DRIVER.ID DRI_ID
        FROM DATA_TABLE DT
        LEFT JOIN CONSTRUCTOR
        ON CONSTRUCTOR.NAME = DT.CONSTRUCTOR  
        LEFT JOIN DRIVER
        ON DT.DRIVER = DRIVER.NAME
    ) TMP
    ON (
    TMP.POINTS = EVENT_DRIVER.POINTS AND 
    TMP.CON_ID = EVENT_DRIVER.CONSTRUCTOR_ID AND 
    TMP.START_POSITION = EVENT_DRIVER.START_POSITION AND 
    TMP.POINTS = EVENT_DRIVER.POINTS AND 
    TMP.TIME = EVENT_DRIVER.TIME
    )
WHEN NOT MATCHED THEN 
    INSERT( 
    DRIVER_ID, 
    CONSTRUCTOR_ID, 
    START_POSITION, 
    POINTS, 
    TIME
    ) VALUES (
    TMP.DRI_ID, 
    TMP.CON_ID, 
    TMP.START_POSITION, 
    TMP.POINTS, 
    TMP.TIME
    );

MERGE INTO EVENT_DRIVER
    USING (
        SELECT DISTINCT
        EVENT.ID EV_ID,
        DT.EVENT,
        DT.TIME
        FROM EVENT
        RIGHT JOIN DATA_TABLE DT
        ON DT.EVENT = EVENT.NAME AND DT."Date" = EVENT.DATETIME
    ) TMP
    ON (
    EVENT_DRIVER.TIME = TMP.TIME
    )
WHEN MATCHED THEN
    UPDATE SET EVENT_ID = TMP.EV_ID;
